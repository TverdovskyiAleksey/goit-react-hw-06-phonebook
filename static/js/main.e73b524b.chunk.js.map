{"version":3,"sources":["Form/Form.module.css","Container/Container.module.css","Filter/Filter.module.css","Container/Container.js","redux/contacts-types.js","redux/contacts-action.js","Form/Form.js","Contacts/Contacts.js","Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","Contacts/Contacts.module.css"],"names":["module","exports","Container","children","className","styles","exportedObject","ADD","DELETE","CHANGE_FILTER","addContact","number","name","type","types","payload","id","shortid","generate","deleteContact","deletedContactId","ChangeFilter","value","connect","dispatch","onSubmit","contactsAction","useState","setName","setNumber","handleChange","e","target","currentContact","reset","preventDefault","style","form","pattern","title","onChange","required","button","getVisibleContacts","allContacts","filter","contact","toLowerCase","includes","contacts","items","onDeleteContact","list","map","item","text","onClick","state","App","setContacts","data","find","alert","prevState","combineReducers","rootReducer","contactsReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e73b524b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1G3uL\",\"button\":\"Form_button__1hS9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1sQ-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__3LrBA\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","const ADD = 'contacts/add';\r\nconst DELETE = 'contacts/delete';\r\nconst CHANGE_FILTER = 'contacts/changeFilter';\r\n\r\nconst exportedObject = {\r\n  ADD,\r\n  DELETE,\r\n  CHANGE_FILTER,\r\n};\r\n\r\nexport default exportedObject;\r\n","import types from './contacts-types';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = ({ number, name }) => ({\r\n  type: types.ADD,\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n});\r\n\r\nconst deleteContact = deletedContactId => ({\r\n  type: types.DELETE,\r\n  payload: deletedContactId,\r\n});\r\n\r\nconst ChangeFilter = value => ({\r\n  type: types.CHANGE_FILTER,\r\n  payload: value,\r\n});\r\n\r\nconst exportedObject = {\r\n  addContact,\r\n  deleteContact,\r\n  ChangeFilter,\r\n};\r\n\r\nexport default exportedObject;\r\n","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport style from './Form.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../redux/contacts-action';\r\n\r\nfunction Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const id = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const currentContact = { name, number, id };\r\n\r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(currentContact);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handelSubmit} className={style.form}>\r\n      <label>\r\n        <span>Name</span>\r\n        <input\r\n          id={shortid.generate()}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>Number</span>\r\n        <input\r\n          id={shortid.generate()}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: number => dispatch(contactsAction.addContact(number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import style from './Contacts.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../redux/contacts-action';\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => (\r\n  <ul className={style.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={style.item}>\r\n        <p className={style.text}>{name}:</p>\r\n        <span>{number}</span>\r\n        <button className={style.button} onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsAction.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../redux/contacts-action';\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className={style.text}>Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsAction.ChangeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useState } from 'react';\r\nimport Container from './Container';\r\nimport Form from './Form';\r\nimport Contacts from './Contacts';\r\nimport Filter from './Filter';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const formSubmitHandler = data => {\r\n    if (contacts.find(contact => contact.name === data.name)) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n    setContacts(prevState => [data, ...prevState]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <Form onSubmit={formSubmitHandler} />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <Contacts />\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport types from './contacts-types';\r\n\r\nconst items = (state = [], { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.CHANGE_FILTER:\r\n      return payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './contacts-reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './style.css';\r\nimport {} from './redux/contacts-types';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3dcNm\",\"item\":\"Contacts_item__2BlD3\",\"text\":\"Contacts_text__rJ4RG\",\"button\":\"Contacts_button__2PRyN\"};"],"sourceRoot":""}