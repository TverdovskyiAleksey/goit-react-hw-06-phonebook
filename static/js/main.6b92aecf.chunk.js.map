{"version":3,"sources":["Contacts/Contacts.module.css","Form/Form.module.css","Container/Container.module.css","Filter/Filter.module.css","Container/Container.js","redux/contacts-action.js","Contacts/Contacts.js","Form/Form.js","Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","styles","exportedObject","addContact","createAction","number","name","payload","id","shortid","generate","deleteContact","ChangeFilter","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","connect","contacts","items","dispatch","onDeleteContact","contactsAction","style","list","map","item","text","button","onClick","onSubmit","useState","setName","setNumber","handleChange","e","target","value","currentContact","reset","preventDefault","alert","form","type","pattern","title","onChange","required","state","App","setContacts","data","find","contact","prevState","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.6b92aecf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3dcNm\",\"item\":\"Contacts_item__2BlD3\",\"text\":\"Contacts_text__rJ4RG\",\"button\":\"Contacts_button__2PRyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1G3uL\",\"button\":\"Form_button__1hS9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1sQ-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__3LrBA\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ number, name }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction('contacts/delete');\r\nconst ChangeFilter = createAction('contacts/changeFilter');\r\n\r\nconst exportedObject = {\r\n  addContact,\r\n  deleteContact,\r\n  ChangeFilter,\r\n};\r\n\r\nexport default exportedObject;\r\n","import style from './Contacts.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../redux/contacts-action';\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => (\r\n  <ul className={style.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={style.item}>\r\n        <p className={style.text}>{name}:</p>\r\n        <span>{number}</span>\r\n        <button className={style.button} onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsAction.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport style from './Form.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../redux/contacts-action';\r\nimport Contacts from '../Contacts/Contacts';\r\n\r\nfunction Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const id = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const currentContact = { name, number, id };\r\n\r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n    if (currentContact === name) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n    onSubmit(currentContact);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handelSubmit} className={style.form}>\r\n      <label>\r\n        <span>Name</span>\r\n        <input\r\n          id={shortid.generate()}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>Number</span>\r\n        <input\r\n          id={shortid.generate()}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: name => dispatch(contactsAction.addContact(name)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../redux/contacts-action';\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className={style.text}>Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsAction.ChangeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { useState } from 'react';\r\nimport Container from './Container';\r\nimport Form from './Form';\r\nimport Contacts from './Contacts';\r\nimport Filter from './Filter';\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useState([]);\r\n\r\n  const formSubmitHandler = data => {\r\n    if (contacts.find(contact => contact.name === data.name)) {\r\n      alert(`${data.name} is already in contacts`);\r\n      return;\r\n    }\r\n    setContacts(prevState => [data, ...prevState]);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <Form onSubmit={formSubmitHandler} />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <Contacts />\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-action';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.ChangeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst exportedObject = {\r\n  store,\r\n  persistor,\r\n};\r\n\r\nexport default exportedObject;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './style.css';\r\nimport {} from './redux/contacts-types';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}