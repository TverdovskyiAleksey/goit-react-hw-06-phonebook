{"version":3,"sources":["Form/Form.module.css","Container/Container.module.css","Filter/Filter.module.css","Container/Container.js","redux/contacts-action.js","redux/contacts-selection.js","Form/Form.js","Contacts/Contacts.js","Filter/Filter.js","App.js","redux/contacts-reducer.js","redux/store.js","index.js","Contacts/Contacts.module.css"],"names":["module","exports","Container","children","className","styles","exportedObject","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","ChangeFilter","getContacts","state","contacts","items","connect","dispatch","onSubmit","contactsAction","useState","setName","setNumber","useSelector","useDispatch","handleChange","e","target","value","reset","preventDefault","some","contact","alert","style","form","type","pattern","title","onChange","required","button","getVisibleContacts","allContacts","filter","normalizedFilter","toLowerCase","includes","onDeleteContact","list","map","item","text","onClick","App","createReducer","actions","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4da56164.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__1G3uL\",\"button\":\"Form_button__1hS9M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1sQ-g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Filter_text__3LrBA\"};","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import shortid from 'shortid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('contacts/add', ({ name, number }) => ({\r\n  payload: {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  },\r\n}));\r\nconst deleteContact = createAction('contacts/delete');\r\nconst ChangeFilter = createAction('contacts/changeFilter');\r\n\r\nconst exportedObject = {\r\n  addContact,\r\n  deleteContact,\r\n  ChangeFilter,\r\n};\r\n\r\nexport default exportedObject;\r\n","export const getContacts = state => state.contacts.items;\r\n\r\nexport const getFilter = state => state.contacts.filter;\r\n","import { useState } from 'react';\r\nimport shortid from 'shortid';\r\nimport style from './Form.module.css';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../redux/contacts-action';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getContacts } from '../redux/contacts-selection';\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsAction.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handelSubmit} className={style.form}>\r\n      <label>\r\n        <span>Name</span>\r\n        <input\r\n          id={shortid.generate()}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>Number</span>\r\n        <input\r\n          id={shortid.generate()}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className={style.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsAction.addContact(name, number)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","import style from './Contacts.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../redux/contacts-action';\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => (\r\n  <ul className={style.list}>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className={style.item}>\r\n        <p className={style.text}>{name}:</p>\r\n        <span>{number}</span>\r\n        <button className={style.button} onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsAction.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\r\n","import style from './Filter.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../redux/contacts-action';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className={style.text}>Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: e => dispatch(contactsAction.ChangeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Container from './Container';\r\nimport Form from './Form';\r\nimport Contacts from './Contacts';\r\nimport Filter from './Filter';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <Form />\r\n      <h2>Contacts</h2>\r\n      <Filter />\r\n      <Contacts />\r\n    </Container>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-action';\r\n\r\nconst items = createReducer([], {\r\n  [actions.addContact]: (state, { payload }) => [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.ChangeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport contactsReducer from './contacts-reducer';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst contactsPersistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst exportedObject = {\r\n  store,\r\n  persistor,\r\n};\r\n\r\nexport default exportedObject;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './style.css';\r\nimport {} from './redux/contacts-types';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__3dcNm\",\"item\":\"Contacts_item__2BlD3\",\"text\":\"Contacts_text__rJ4RG\",\"button\":\"Contacts_button__2PRyN\"};"],"sourceRoot":""}